{"version":3,"file":"static/js/45.1ed84f2f.chunk.js","mappings":"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","sources":["components/ProfileForm/ProfileForm.styles.js","components/ProfileForm/ProfileForm.jsx","pages/Profile/ProfilePage.styles.js","pages/Profile/ProfilePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const ProfileDataArea = styled.div`\n  background-color: ${({ theme }) => theme.subHeaderColor};\n  padding: 60px 30px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  gap: 20px;\n`;\n\nexport const ProfileFormWrapper = styled.div`\n  width: 100%;\n  text-align: center;\n  & > form {\n    width: 100%;\n  }\n`;\n\nexport const ProfileTitle = styled.h2`\n  font-size: 36px;\n  color: ${({ theme }) => theme.headerTextColor};\n\n  ${mobile`\n    text-align: center;\n  `}\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  gap: 15px;\n  font-size: 28px;\n  color: ${({ theme }) => theme.headerTextColor};\n\n  ${mobile`\n    flex-direction: column;\n    align-items: center;\n  `}\n\n  & > input {\n    background: gray;\n    border: 1px solid gray;\n    text-align: center;\n    font-size: 26px;\n    color: ${({ theme }) => theme.headerTextColor};\n    padding: 2px 5px;\n    max-width: 300px;\n    width: 100%;\n\n    ${mobile`\n    text-align: center;\n  `}\n\n    &[readonly] {\n      background: transparent;\n      border: none;\n    }\n  }\n`;\n\nexport const InputSubTitle = styled.h5`\n  margin: 0;\n`;\n\nexport const ChangeButton = styled.button`\n  padding: 0 20px;\n  border-radius: 10px;\n\n  background-color: ${({ theme }) => theme.headerTextColor};\n`;\n\nexport const SaveButton = styled.input`\n  padding: 10px 20px;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.headerTextColor};\n`;\n\nexport const ProfileSubBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  ${mobile`\n    justify-content: center;\n    text-align: center;\n  `}\n`;\n\nexport const ProfileButtons = styled.div`\n  /* display: flex; */\n  /* justify-content: flex-end; */\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  color: black;\n  border: none;\n\n  ${mobile`\n    justify-content: center;\n    gap: 10px\n  `}\n`;\n\nexport const ProfileImage = styled.img`\n  width: 250px;\n  height: 250px;\n  object-fit: cover;\n  margin: 0 auto;\n  border-radius: 5px;\n`;\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { patchCurrentUserThunk, patchUserAvatarThunk } from \"store/authReducer/authOperations\";\nimport { select } from \"store/selectors/selectors\";\nimport swal from \"sweetalert\";\nimport { ChangeButton, InputSubTitle, InputWrapper, ProfileButtons, ProfileDataArea, ProfileFormWrapper, ProfileImage, ProfileTitle, SaveButton } from \"./ProfileForm.styles\";\nimport { defaultImage } from \"utils/helpers/defaultImg\";\n\nconst ProfileForm = () => {\n    const { register, handleSubmit, } = useForm();\n    const { email, nickname = '' } = useSelector(select.userData)\n    const user = useSelector(select.userData)\n    const [creativeMode, setCreativeMode] = useState(false)\n    const dispatch = useDispatch()\n    const avatarUser = user?.avatarURL ?? defaultImage\n\n    const handleChangeMode = (event) => {\n        event.preventDefault()\n        setCreativeMode(!creativeMode)\n    }\n\n    const onSubmit = (newData) => {\n        const { nickname: newName, avatar } = newData\n        let changeCount = 0;\n        if (avatar.length !== 0) {\n            const formData = new FormData();\n            formData.append('avatar', avatar[0]);\n            dispatch(patchUserAvatarThunk(formData))\n            changeCount++;\n        }\n        if (nickname !== newName) {\n            dispatch(patchCurrentUserThunk({ nickname: newName })).unwrap().then(() => setCreativeMode(!creativeMode))\n            changeCount++;\n        }\n        if (changeCount === 0) {\n            swal({ title: \"There are no changes\" })\n        }\n\n    }\n\n    return (\n        <ProfileFormWrapper>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <ProfileTitle>Personal Area</ProfileTitle>\n                <ProfileDataArea>\n                    <ProfileImage src={avatarUser} />\n\n                    <InputWrapper>\n                        <InputSubTitle>Photo:</InputSubTitle>\n                        <input type=\"file\" {...register('avatar')} />\n                    </InputWrapper>\n\n                    <InputWrapper>\n                        <InputSubTitle>Nickname:</InputSubTitle>\n                        <input defaultValue={nickname} {...register(\"nickname\")} readOnly={!creativeMode} />\n                    </InputWrapper>\n\n                    <InputWrapper>\n                        <InputSubTitle>Email: </InputSubTitle>\n                        <input defaultValue={email} {...register(\"email\")} readOnly={true} />\n                    </InputWrapper>\n\n                    <ProfileButtons>\n                        <ChangeButton onClick={handleChangeMode}>{creativeMode ? \"Break\" : \"Edit text field\"}</ChangeButton>\n                        <SaveButton className=\"submit-button\" type=\"submit\" value={'Save'} />\n                    </ProfileButtons>\n\n                </ProfileDataArea>\n\n\n            </form></ProfileFormWrapper>\n    )\n}\n\nexport default ProfileForm","import styled from 'styled-components';\n\nexport const ProfileContainer = styled.div`\n  max-width: 840px;\n  padding: 60px 15px 15px;\n  margin: 0 auto 60px;\n`;\n","import ProfileForm from \"components/ProfileForm/ProfileForm\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Navigate } from \"react-router-dom\"\nimport { setCurrentPage } from \"store/requestReducer/requestSlice\"\nimport { reselect } from \"store/selectors/selectors\"\nimport { ProfileContainer } from \"./ProfilePage.styles\"\n\nconst ProfilePage = () => {\n    const dispatch = useDispatch()\n    const authComplete = useSelector(reselect.authCompleteSuccess)\n\n    useEffect(() => {\n        dispatch(setCurrentPage('profile'))\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <>\n            {authComplete ?\n                <ProfileContainer >\n                    < ProfileForm />\n                </ProfileContainer>\n                : <Navigate to=\"/\" />\n            }\n        </>\n\n    )\n}\n\nexport default ProfilePage"],"names":["ProfileDataArea","styled","theme","subHeaderColor","ProfileFormWrapper","ProfileTitle","headerTextColor","mobile","InputWrapper","InputSubTitle","ChangeButton","SaveButton","ProfileButtons","ProfileImage","useForm","register","handleSubmit","useSelector","select","email","nickname","user","useState","creativeMode","setCreativeMode","dispatch","useDispatch","avatarUser","avatarURL","defaultImage","onSubmit","newData","newName","avatar","changeCount","length","formData","FormData","append","patchUserAvatarThunk","patchCurrentUserThunk","unwrap","then","swal","title","src","type","defaultValue","readOnly","onClick","event","preventDefault","className","value","ProfileContainer","authComplete","reselect","useEffect","setCurrentPage","to"],"sourceRoot":""}