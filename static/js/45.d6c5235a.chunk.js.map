{"version":3,"file":"static/js/45.d6c5235a.chunk.js","mappings":"2UAGaA,EAAkBC,EAAAA,GAAAA,IAAH,uJACN,qBAAGC,MAAkBC,cAArB,IAQTC,EAAqBH,EAAAA,GAAAA,IAAH,+EAQlBI,EAAeJ,EAAAA,GAAAA,GAAH,oEAEd,qBAAGC,MAAkBI,eAArB,IAEPC,EAAAA,EAAAA,GAJqB,oDASZC,EAAeP,EAAAA,GAAAA,IAAH,yYAKd,qBAAGC,MAAkBI,eAArB,IAEPC,EAAAA,EAAAA,GAPqB,kFAgBZ,qBAAGL,MAAkBI,eAArB,IAKPC,EAAAA,EAAAA,GArBmB,oDAgCZE,EAAgBR,EAAAA,GAAAA,GAAH,sCAIbS,EAAeT,EAAAA,GAAAA,OAAH,8FAGH,qBAAGC,MAAkBI,eAArB,IAGTK,EAAaV,EAAAA,GAAAA,MAAH,iGAGD,qBAAGC,MAAkBI,eAArB,IAGTM,EAAkBX,EAAAA,GAAAA,IAAH,sFAIxBM,EAAAA,EAAAA,GAJwB,kFAUfM,EAAiBZ,EAAAA,GAAAA,IAAH,iFAIvBM,EAAAA,EAAAA,GAJuB,wE,SC/B3B,EAhDoB,WAChB,OAAoCO,EAAAA,EAAAA,MAA5BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAClB,GAAiCC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,UAArCC,EAAR,EAAQA,MAAR,IAAeC,SAAAA,OAAf,MAA0B,GAA1B,EACA,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACI,SAACrB,EAAD,WACI,kBAAMsB,SAAUV,GAXP,SAACW,GACd,IAAkBC,EAAYD,EAAtBP,SACJA,IAAaQ,EAIjBJ,GAASK,EAAAA,EAAAA,IAAsB,CAAET,SAAUQ,KAAYE,SAASC,MAAK,kBAAMR,GAAiBD,EAAvB,IAHjEU,IAAK,CAAEC,MAAO,2BAIrB,IAIO,WACI,SAAC5B,EAAD,6BACA,UAACL,EAAD,YACI,SAACY,EAAD,WACI,UAACJ,EAAD,YACI,SAACC,EAAD,yBACA,kCAAOyB,aAAcd,GAAcL,EAAS,aAA5C,IAAyDoB,UAAWb,WAG5E,SAACV,EAAD,WACI,UAACJ,EAAD,YACI,SAACC,EAAD,uBACA,kCAAOyB,aAAcf,GAAWJ,EAAS,UAAzC,IAAmDoB,UAAU,WAGrE,UAACtB,EAAD,YACI,SAACH,EAAD,CAAc0B,QAhCT,SAACC,GACtBA,EAAMC,iBACNf,GAAiBD,EACpB,EA6BmB,SAA0CA,EAAe,QAAU,UACnE,SAACX,EAAD,CAAY4B,UAAU,gBAAgBC,KAAK,SAASC,MAAO,mBAOlF,ECpDYC,EAAmBzC,EAAAA,GAAAA,IAAH,4F,SCmB7B,EAfoB,WAChB,IAAMuB,GAAWC,EAAAA,EAAAA,MAOjB,OALAkB,EAAAA,EAAAA,YAAU,WACNnB,GAASoB,EAAAA,EAAAA,IAAe,WAE3B,GAAE,KAGC,SAACF,EAAD,WACI,SAAC,EAAD,KAGX,C","sources":["components/ProfileForm/ProfileForm.styles.js","components/ProfileForm/ProfileForm.jsx","pages/Profile/ProfilePage.styles.js","pages/Profile/ProfilePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const ProfileDataArea = styled.div`\n  background-color: ${({ theme }) => theme.subHeaderColor};\n  padding: 30px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ProfileFormWrapper = styled.div`\n  width: 100%;\n\n  & > form {\n    width: 100%;\n  }\n`;\n\nexport const ProfileTitle = styled.h2`\n  font-size: 36px;\n  color: ${({ theme }) => theme.headerTextColor};\n\n  ${mobile`\n    text-align: center;\n  `}\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  font-size: 28px;\n  color: ${({ theme }) => theme.headerTextColor};\n\n  ${mobile`\n    flex-direction: column;\n    align-items: center;\n  `}\n\n  & > input {\n    background: gray;\n    border: 1px solid gray;\n    font-size: 26px;\n    color: ${({ theme }) => theme.headerTextColor};\n    padding: 2px 5px;\n    max-width: 300px;\n    width: 100%;\n\n    ${mobile`\n    text-align: center;\n  `}\n\n    &[readonly] {\n      background: transparent;\n      border: none;\n    }\n  }\n`;\n\nexport const InputSubTitle = styled.h5`\n  margin: 0;\n`;\n\nexport const ChangeButton = styled.button`\n  padding: 0 20px;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.headerTextColor};\n`;\n\nexport const SaveButton = styled.input`\n  padding: 10px 20px;\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.headerTextColor};\n`;\n\nexport const ProfileSubBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  ${mobile`\n    justify-content: center;\n    text-align: center;\n  `}\n`;\n\nexport const ProfileButtons = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  ${mobile`\n    justify-content: center;\n    gap: 10px\n  `}\n`;\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { patchCurrentUserThunk } from \"store/authReducer/authOperations\";\nimport { select } from \"store/selectors/selectors\";\nimport swal from \"sweetalert\";\nimport { ChangeButton, InputSubTitle, InputWrapper, ProfileButtons, ProfileDataArea, ProfileFormWrapper, ProfileSubBlock, ProfileTitle, SaveButton } from \"./ProfileForm.styles\";\n\nconst ProfileForm = () => {\n    const { register, handleSubmit, } = useForm();\n    const { email, nickname = '' } = useSelector(select.userData)\n    const [creativeMode, setCreativeMode] = useState(false)\n    const dispatch = useDispatch()\n\n    const handleChangeMode = (event) => {\n        event.preventDefault()\n        setCreativeMode(!creativeMode)\n    }\n\n    const onSubmit = (newData) => {\n        const { nickname: newName } = newData\n        if (nickname === newName) {\n            swal({ title: \"Nickname is not changed\" })\n            return\n        }\n        dispatch(patchCurrentUserThunk({ nickname: newName })).unwrap().then(() => setCreativeMode(!creativeMode))\n    }\n\n    return (\n        <ProfileFormWrapper>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <ProfileTitle>Personal Area</ProfileTitle>\n                <ProfileDataArea>\n                    <ProfileSubBlock>\n                        <InputWrapper>\n                            <InputSubTitle>Nickname:</InputSubTitle>\n                            <input defaultValue={nickname} {...register(\"nickname\")} readOnly={!creativeMode} />\n                        </InputWrapper>\n                    </ProfileSubBlock>\n                    <ProfileSubBlock>\n                        <InputWrapper>\n                            <InputSubTitle>Email: </InputSubTitle>\n                            <input defaultValue={email} {...register(\"email\")} readOnly={true} />\n                        </InputWrapper>\n                    </ProfileSubBlock>\n                    <ProfileButtons>\n                        <ChangeButton onClick={handleChangeMode}>{creativeMode ? \"Break\" : \"Edit\"}</ChangeButton>\n                        <SaveButton className=\"submit-button\" type=\"submit\" value={'Save'} />\n                    </ProfileButtons>\n                </ProfileDataArea>\n\n\n            </form></ProfileFormWrapper>\n    )\n}\n\nexport default ProfileForm","import styled from 'styled-components';\n\nexport const ProfileContainer = styled.div`\n  max-width: 840px;\n  padding: 60px 15px 15px;\n  margin: 0 auto;\n`;\n","import ProfileForm from \"components/ProfileForm/ProfileForm\"\nimport { ProfileContainer } from \"./ProfilePage.styles\"\nimport { setCurrentPage } from \"store/requestReducer/requestSlice\"\nimport { useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\"\n\nconst ProfilePage = () => {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setCurrentPage('profile'))\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <ProfileContainer>\n            <ProfileForm />\n        </ProfileContainer>\n    )\n}\n\nexport default ProfilePage"],"names":["ProfileDataArea","styled","theme","subHeaderColor","ProfileFormWrapper","ProfileTitle","headerTextColor","mobile","InputWrapper","InputSubTitle","ChangeButton","SaveButton","ProfileSubBlock","ProfileButtons","useForm","register","handleSubmit","useSelector","select","email","nickname","useState","creativeMode","setCreativeMode","dispatch","useDispatch","onSubmit","newData","newName","patchCurrentUserThunk","unwrap","then","swal","title","defaultValue","readOnly","onClick","event","preventDefault","className","type","value","ProfileContainer","useEffect","setCurrentPage"],"sourceRoot":""}