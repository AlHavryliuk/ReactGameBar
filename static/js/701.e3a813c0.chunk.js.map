{"version":3,"file":"static/js/701.e3a813c0.chunk.js","mappings":"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","sources":["components/Toaster/toasts.js","utils/dateFormatter/dateFormatter.js","components/Main/DetailsProperties/DetailsProperties.styled.js","components/Main/DetailsProperties/DetailsProperties.jsx","components/Main/Details/Details.styled.js","components/Main/DetailsAchievements/DetailsAchievements.styled.js","components/Main/DetailsAchievements/DetailsAchievements.jsx","components/Main/Details/Details.jsx","components/Main/SimpleSlider/SimpleSlider.styled.js","components/Main/SimpleSlider/SimpleSlider.jsx","pages/GameDetails/GameDetailsPage.styled.js","components/Main/RatingStars/RatingStars.jsx","components/GoBackButton/GoBackButton.styled.js","components/GoBackButton/GoBackButton.jsx","pages/GameDetails/GameDetailsPage.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\n\n\nexport const successToast = message =>\n  toast.success(message, {\n    position: 'top-center',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n","export const releaseDate = released => {\n  const dateArray = released.split('-');\n  return `${dateArray[2]} ${getMounth(dateArray[1])} ${dateArray[0]} `;\n};\n\nconst getMounth = numOfMounths => {\n  switch (numOfMounths) {\n    case '01':\n      return 'January';\n    case '02':\n      return 'February';\n    case '03':\n      return 'March';\n    case '04':\n      return 'April';\n    case '05':\n      return 'May';\n    case '06':\n      return 'June';\n    case '07':\n      return 'July';\n    case '08':\n      return 'August';\n    case '09':\n      return 'September';\n    case '10':\n      return 'October';\n    case '11':\n      return 'November';\n    case '12':\n      return 'December';\n    default:\n      return;\n  }\n};\n\nexport const getLastDate = updated => {\n  const dateArray = updated.split('-');\n  return `${getMounth(dateArray[1])} ${dateArray[0]}`;\n};\n","import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const DetailsPropertyWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const DetailsPropertiesContainer = styled.div`\n  width: 100%;\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(2, 1fr);\n  color: ${({ theme }) => theme.mainTextColor};\n\n  ${mobile`\n    grid-template-columns: repeat(1, 1fr);\n    gap: 0;\n  `}\n`;\n\nexport const PropertiesSubTitle = styled.h2`\n  color: ${({ theme }) => theme.mainTextColor};\n  text-decoration: underline;\n\n  ${mobile`\n    text-align: center; \n  `}\n`;\n\nexport const CustomProperyiesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  ${mobile`\n    padding: 0;\n  `}\n\n  & span {\n    display: flex;\n    align-items: center;\n    font-size: 18px;\n    font-weight: 600;\n    margin-right: 8px;\n  }\n\n  & li {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    font-size: 18px;\n\n    & a {\n      font-size: 18px;\n      color: ${({ theme }) => theme.mainTextColor};\n    }\n  }\n`;\n\nexport const CustomPropertyIcons = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 7px;\n  padding: 0;\n\n  & li {\n    background-color: white;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  & svg {\n    fill: ${({ theme }) => theme.detailsIconFillColor};\n  }\n`;\n\nexport const RateSpan = styled.span`\n  width: auto;\n  border: 1px solid #30d5c8;\n  padding: 5px 10px;\n  background-color: #2aa5a0;\n  background-image: linear-gradient(\n    90deg,\n    #30d5c8,\n    ${({ theme }) => theme.mainTextColor},\n    gold,\n    #30d5c8\n  );\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { select } from 'store/selectors/selectors';\nimport { getLastDate, releaseDate } from 'utils/dateFormatter/dateFormatter';\nimport platformIcon from '../../../images/icon-spread.svg';\nimport {\n  CustomPropertyIcons,\n  CustomProperyiesList,\n  DetailsPropertiesContainer,\n  DetailsPropertyWrapper,\n  PropertiesSubTitle,\n  RateSpan,\n} from './DetailsProperties.styled';\n\nconst DetailsProperties = () => {\n  const {\n    rating,\n    released,\n    genres,\n    developers,\n    stores,\n    parent_platforms,\n    updated,\n    website\n  } = useSelector(select.selectedGame);\n\n  return (\n    <DetailsPropertyWrapper>\n      <PropertiesSubTitle>Properties</PropertiesSubTitle>\n      <DetailsPropertiesContainer>\n        <CustomProperyiesList>\n          <li>\n            <span>Rating:</span>\n            <span>\n              <RateSpan>{rating}</RateSpan>\n            </span>\n          </li>\n          <li>\n            <span>Genre</span> {genres.map(({ name }) => name).join(', ')}\n          </li>\n          <li>\n            <span>Reliase date:</span> {releaseDate(released)}\n          </li>\n          <li>\n            <span>Last updated:</span> {getLastDate(updated)}\n          </li>\n          <li>\n            <span> <a href={website} rel=\"noreferrer\" target=\"_blank\">Official website</a> </span>\n          </li>\n        </CustomProperyiesList>\n        <CustomProperyiesList>\n          <li>\n            <span>Developers:</span>\n            {developers.map(({ name }) => name).join(', ')}\n          </li>\n          <li>\n            <span>Available Stores:</span>\n            {stores.map(({ store }) => store.name).join(', ')}\n          </li>\n          <li>\n            <span>Supported Platforms: </span>\n            <CustomPropertyIcons>\n              {parent_platforms.map(({ platform }) => (\n                <li key={platform.id}>\n                  <svg width=\"20\" height=\"20\">\n                    <use href={`${platformIcon}#icon-${platform.slug}`}></use>\n                  </svg>\n                </li>\n              ))}\n            </CustomPropertyIcons>\n          </li>\n        </CustomProperyiesList>\n      </DetailsPropertiesContainer>\n    </DetailsPropertyWrapper>\n  );\n};\n\nexport default DetailsProperties;\n","import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const DetailsBlock = styled.div`\n  padding: 30px 0;\n`;\n\nexport const DetailsSubTitle = styled.h2`\n  color: ${({ theme }) => theme.headerTextColor};\n  text-decoration: underline;\n  text-align: center;\n  ${mobile`\n    display: none;\n  `}\n`;\n\nexport const DetailsText = styled.p`\n  color: ${({ theme }) => theme.headerTextColor};\n  padding: 0 20px;\n  font-size: 18px;\n`;\n\nexport const DetailsColorWrapper = styled.div`\n  background-color: ${({ theme }) => theme.headerBackgroundColor};\n  padding: 20px;\n  margin-top: 10px;\n  border-radius: 10px;\n`;\n\nexport const DetailsButtonWrapper = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 15px;\n`;\n\nexport const DetailsButton = styled.button`\n  padding: 15px;\n  font-size: 18px;\n  border-radius: 10px;\n  border: none;\n  background-color: ${({ theme }) => theme.removeAddButtons};\n  color: ${({ theme }) => theme.removeAddText};\n  cursor: pointer;\n\n  &:disabled {\n    background-color: #6c757d;\n    border-color: #6c757d;\n    cursor: auto;\n  }\n`;\n","import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const AchievementsContainer = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  gap: 20px;\n  padding: 30px 0 20px;\n  overflow-x: scroll;\n  ::-webkit-scrollbar {\n    width: 12px; /* ширина всей полосы прокрутки */\n  }\n  ::-webkit-scrollbar-track {\n    background: ${({ theme }) =>\n      theme.mainTextColor}; /* цвет зоны отслеживания */\n    border-radius: 20px; /* округлось бегунка */\n    border: 1px solid;\n    border-color: ${({ theme }) => theme.headerBackgroundColor};\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) =>\n      theme.headerBackgroundColor}; /* цвет бегунка */\n    border-radius: 20px; /* округлось бегунка */\n    border: none; /* отступ вокруг бегунка */\n  }\n`;\n// background-color: ${({ theme }) => theme.lightModeBackground};\nexport const AchievementsCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 20px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  background-color: ${({ theme }) => theme.achievementsCardColor};\n  /* width: 200px; */\n  transition: all 0.3s;\n\n  & img {\n    height: 200px;\n    border-radius: 20px 20px 0 0;\n  }\n\n  & p {\n    text-align: center;\n    color: ${({ theme }) => theme.mainTextColor};\n  }\n\n  &:hover {\n    /* background-color: ${({ theme }) => theme.headerBackgroundColor}; */\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n    scale: 1.05;\n\n    ${mobile`\n      scale: 1;\n      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  `}\n  }\n`;\n","import React from 'react'\nimport { DetailsPropertyWrapper, PropertiesSubTitle } from '../DetailsProperties/DetailsProperties.styled'\nimport { AchievementsCard, AchievementsContainer } from './DetailsAchievements.styled';\nimport { useSelector } from 'react-redux';\nimport { select } from 'store/selectors/selectors';\n\nconst DetailsAchievements = () => {\n    const achievements = useSelector(select.achievements)\n\n\n    return (\n        <DetailsPropertyWrapper>\n            <PropertiesSubTitle>Popular Achievements</PropertiesSubTitle>\n            {achievements && <>\n                <AchievementsContainer>\n                    {achievements.map(({ id, name, image }) =>\n                        <AchievementsCard key={id}>\n                            <img src={image} alt={name} />\n                            <p>{name}</p>\n                        </AchievementsCard>)}\n                </AchievementsContainer>\n            </>}\n        </DetailsPropertyWrapper >\n    )\n}\n\nexport default DetailsAchievements","import Loader from 'components/Loader/Loader';\nimport { successToast } from 'components/Toaster/toasts';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFavoriteGame, removeFavoriteGame } from 'store/favoriteGames/favoriteSlice';\nimport { select } from 'store/selectors/selectors';\nimport DetailsProperties from '../DetailsProperties/DetailsProperties';\nimport { DetailsBlock, DetailsButton, DetailsButtonWrapper, DetailsColorWrapper, DetailsSubTitle, DetailsText } from './Details.styled';\nimport DetailsAchievements from '../DetailsAchievements/DetailsAchievements';\n\nconst Details = () => {\n  const { id, description_raw,\n    background_image_additional,\n    name\n  } = useSelector(select.selectedGame);\n  const favoriteGames = useSelector(select.favoriteGames)\n  const dispatch = useDispatch()\n  const isLoading = useSelector(select.selectedIsLoading)\n\n\n\n  const gameAlreadyAdded = () => favoriteGames.some(({ id: gameId }) => gameId === id)\n\n  const handleAddFavoriteGame = () => {\n    dispatch(addFavoriteGame({\n      id,\n      background_image_additional,\n      name\n    }))\n    successToast(`The game \"${name}\" has been successfully added to your library`)\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [])\n\n\n  const handleRemoveFavoriteGame = () => {\n    dispatch(removeFavoriteGame(id))\n    successToast(`The game \"${name}\" has been successfully removed from your library`)\n  }\n\n  return (\n    <DetailsBlock>\n      {isLoading && <Loader />}\n      <DetailsColorWrapper>\n        <DetailsSubTitle>Description</DetailsSubTitle>\n        <DetailsText>{description_raw}</DetailsText>\n      </DetailsColorWrapper>\n      <DetailsProperties />\n      <DetailsButtonWrapper>\n        <DetailsButton onClick={handleAddFavoriteGame} disabled={gameAlreadyAdded()}>{gameAlreadyAdded() ? `Already added` : `Add to Libary`}  </DetailsButton>\n        <DetailsButton onClick={handleRemoveFavoriteGame} disabled={!gameAlreadyAdded()}>Remove from Libary</DetailsButton>\n      </DetailsButtonWrapper>\n      <DetailsAchievements />\n    </DetailsBlock>\n  );\n};\n\nexport default Details;\n","import styled from 'styled-components';\n\nexport const SlaiderWrapper = styled.div`\n  & .slick-arrow::before {\n    color: ${({ theme }) => theme.sliderArrow};\n  }\n`;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Slider from 'react-slick';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport 'slick-carousel/slick/slick.css';\nimport { select } from 'store/selectors/selectors';\nimport { SlaiderWrapper } from './SimpleSlider.styled';\n\nexport const SimpleSlider = () => {\n  const screenshots = useSelector(select.screenshots);\n  const [lightbox, setLightbox] = useState(null);\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  useEffect(() => {\n    if (screenshots && screenshots.length && !lightbox) {\n      const lb = new SimpleLightbox('.gallery a', { /* options */ });\n      setLightbox(lb);\n    }\n  }, [screenshots, lightbox]);\n\n\n  return (\n    <SlaiderWrapper>\n      <Slider {...settings} className=\"gallery\">\n        {screenshots &&\n          screenshots.map(screen => {\n            return (\n              <a href={screen} key={screen}>\n                <div >\n                  <img src={screen} width=\"100%\" alt=\"\" />\n                </div>\n              </a>\n            );\n          })}\n      </Slider>\n    </SlaiderWrapper>\n  );\n};\n\nexport default SimpleSlider;\n","import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const DetailsContainer = styled.div`\n  max-width: 1000px;\n  padding: 60px 115px;\n  margin: 0 auto;\n\n  ${mobile`\n      padding: 15px 35px;\n  `}\n`;\n\nexport const GameTitle = styled.h1`\n  color: ${({ theme }) => theme.mainTextColor};\n  display: flex;\n  justify-content: space-between;\n\n  ${mobile`\n      justify-content: center; \n  `}\n`;\n\nexport const GameRating = styled.h2`\n  color: ${({ theme }) => theme.mainTextColor};\n  padding: 5px 10px;\n  margin: 0 0 25px;\n\n  ${mobile`\n      padding: 0;\n     \n  `}\n\n  & svg {\n    fill: ${({ theme }) => theme.ratingIconFillColor};\n    margin-left: 10px;\n  }\n`;\n\nexport const RatingBackWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  ${mobile`\n      flex-direction: column;\n      align-items: center;\n  `}\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport starsIcon from '../../../images/icon-spread.svg';\n\nconst RatingStars = ({ rating }) => {\n  const simpleRate = rating.toFixed(1);\n  const stars = {\n    empty: `${starsIcon}#icon-star-empty`,\n    half: `${starsIcon}#icon-star-half`,\n    full: `${starsIcon}#icon-star-full`,\n  };\n  const defaultRating = [\n    stars.empty,\n    stars.empty,\n    stars.empty,\n    stars.empty,\n    stars.empty,\n  ];\n\n  return (\n    <>\n      {defaultRating.map((star, index) => {\n        if (index + 1 <= simpleRate) {\n          star = stars.full;\n        }\n        if (index + 1 > simpleRate) {\n          if (index + 1 - simpleRate < 1) {\n            star = stars.half;\n          } else {\n            star = stars.empty;\n          }\n        }\n        return (\n          <svg height=\"20\" width=\"20\" key={nanoid()}>\n            <use href={star}></use>\n          </svg>\n        );\n      })}\n    </>\n  );\n};\n\nexport default RatingStars;\n","import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const BackIcon = styled.span`\n  width: 80px;\n  font-size: 30px;\n  border-radius: 10px;\n  background-color: white;\n  text-align: center;\n  padding-bottom: 5px;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.headerBackgroundColor};\n  color: ${({ theme }) => theme.loadMoreBtnTextColor};\n\n  transition: all 0.3s ease 0s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.detailsIconFillColor};\n    color: ${({ theme }) => theme.loadMoreBtnTextColor};\n  }\n`;\n\nexport const GoBackWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 40px;\n\n  ${mobile`\n      margin-right: 0px;\n      margin-bottom: 20px;\n  `}\n`;\n","import React from 'react'\nimport { BackIcon, GoBackWrapper } from './GoBackButton.styled';\n\nconst GoBackButton = () => {\n\n    const handleGoBack = () => window.history.back();\n\n    return (\n        <GoBackWrapper>\n            <BackIcon onClick={handleGoBack}>←</BackIcon>\n        </GoBackWrapper>\n    )\n}\n\nexport default GoBackButton","import Details from 'components/Main/Details/Details';\nimport SimpleSlider from 'components/Main/SimpleSlider/SimpleSlider';\nimport React, { useEffect } from 'react';\nimport {\n  DetailsContainer,\n  GameRating,\n  GameTitle,\n  RatingBackWrapper,\n} from './GameDetailsPage.styled';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAchievements,\n  getGameDetails,\n  getScreenshots,\n} from 'store/selectGameReducer/selectGameOperation';\nimport { select } from 'store/selectors/selectors';\nimport RatingStars from 'components/Main/RatingStars/RatingStars';\nimport { setCurrentPage } from 'store/requestReducer/requestSlice';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\n\n\nconst GameDetailsPage = () => {\n  const { gameId } = useParams();\n  const dispatch = useDispatch();\n  const game = useSelector(select.selectedGame);\n\n\n  useEffect(() => {\n    dispatch(setCurrentPage('details'));\n    // eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    dispatch(getGameDetails(gameId))\n      .unwrap()\n      .then(() => {\n        dispatch(getScreenshots(gameId))\n        dispatch(getAchievements(gameId))\n      });\n  }, [gameId, dispatch]);\n\n  return (\n    <DetailsContainer>\n      {game && (\n        <>\n          <GameTitle>{game.name}</GameTitle>\n          <RatingBackWrapper >\n            <GameRating>\n              {game.rating.toFixed(1)}\n              <RatingStars rating={game.rating}></RatingStars>\n            </GameRating>\n            <GoBackButton />\n          </RatingBackWrapper>\n          <SimpleSlider />\n          <Details />\n        </>\n      )}\n    </DetailsContainer>\n  );\n};\n\nexport default GameDetailsPage;\n"],"names":["successToast","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","releaseDate","released","dateArray","split","getMounth","numOfMounths","getLastDate","updated","DetailsPropertyWrapper","styled","DetailsPropertiesContainer","theme","mainTextColor","mobile","PropertiesSubTitle","CustomProperyiesList","CustomPropertyIcons","detailsIconFillColor","RateSpan","useSelector","select","rating","genres","developers","stores","parent_platforms","website","map","name","join","href","rel","target","store","platform","width","height","platformIcon","slug","id","DetailsBlock","DetailsSubTitle","headerTextColor","DetailsText","DetailsColorWrapper","headerBackgroundColor","DetailsButtonWrapper","DetailsButton","removeAddButtons","removeAddText","AchievementsContainer","AchievementsCard","achievementsCardColor","achievements","image","src","alt","description_raw","background_image_additional","favoriteGames","dispatch","useDispatch","isLoading","gameAlreadyAdded","some","useEffect","window","scrollTo","Loader","onClick","addFavoriteGame","disabled","removeFavoriteGame","SlaiderWrapper","sliderArrow","screenshots","useState","lightbox","setLightbox","length","lb","SimpleLightbox","dots","infinite","speed","slidesToShow","slidesToScroll","className","screen","DetailsContainer","GameTitle","GameRating","ratingIconFillColor","RatingBackWrapper","simpleRate","toFixed","stars","empty","starsIcon","half","full","defaultRating","star","index","nanoid","BackIcon","loadMoreBtnTextColor","GoBackWrapper","history","back","gameId","useParams","game","setCurrentPage","getGameDetails","unwrap","then","getScreenshots","getAchievements"],"sourceRoot":""}