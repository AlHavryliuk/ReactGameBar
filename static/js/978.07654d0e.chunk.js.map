{"version":3,"file":"static/js/978.07654d0e.chunk.js","mappings":"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","sources":["components/Custom/GameGallery/GameGallery.jsx","components/Custom/GameGallery/GameGallery.styled.js","components/Main/GameCard/GameCard.jsx","components/Main/GameCard/GameCard.styled.js","components/Main/Libary/Libary.styled.js","components/Pagination/NextPage/NextPage.styled.js","components/Pagination/NextPage/NextPage.jsx","components/Pagination/PreviousPage/PreviousPage.styled.js","components/Pagination/PreviousPage/PreviousPage.jsx","components/Pagination/ManagerButton/ManagerButton.styled.js","components/Pagination/ManagerButton/ManagerButton.jsx","../node_modules/memoize-one/dist/memoize-one.esm.js","components/Pagination/NumPageMenu/NumPageMenu.styles.js","components/Pagination/NumPageMenu/NumPageMenu.jsx","pages/GameByGenres/GameByGenresPage.jsx"],"sourcesContent":["import React from 'react';\nimport { GameGalleryContainer } from './GameGallery.styled';\n\nconst GameGallery = ({ children }) => {\n  return <GameGalleryContainer>{children}</GameGalleryContainer>;\n};\n\nexport default GameGallery;\n","import styled from 'styled-components';\nimport { mobile, tablet } from 'utils/mixins/adaptMixin';\n\nexport const GameGalleryContainer = styled.div`\n  max-width: 1240px;\n  padding: 60px 15px 15px;\n  margin: 0 auto;\n  display: grid;\n  gap: 20px;\n  grid-template-columns: repeat(3, 1fr);\n  position: relative;\n\n  ${tablet`\n    grid-template-columns: repeat(2, 1fr);\n  `}\n\n  ${mobile`\n    grid-template-columns: repeat(1, 1fr);\n    padding: 30px 15px 15px;\n  `}\n`;\n\nexport const SectionTitle = styled.h1`\n  grid-column: 1 / -1;\n  text-align: center;\n  color: ${({ theme }) => theme.mainTextColor};\n  display: none;\n\n  ${mobile`\n    display: block;\n    margin: 0;\n  `}\n`;\n","import React from 'react';\nimport { CustomGameCard, CustomNavLink } from './GameCard.styled';\n\nconst GameCard = ({ game: { id, name, short_screenshots = '#' } }) => {\n  const title = sliceName(name);\n  const notFoundImage = 'https://picturesofmaidenhead.files.wordpress.com/2019/01/image-not-found.jpg?w=1620'\n\n  const handleAltImage = () => {\n    if (!short_screenshots) return notFoundImage\n    if (!short_screenshots.length) return notFoundImage\n    if (short_screenshots.length > 1) return short_screenshots[1].image\n    return notFoundImage\n  }\n\n  return (\n    <CustomNavLink to={`/details/${id}`}>\n      <CustomGameCard>\n        <img\n          width=\"100%\"\n          // src={background_image}\n          src={handleAltImage()}\n          alt=\"\"\n        />\n        <h3>{title}</h3>\n      </CustomGameCard>\n    </CustomNavLink>\n  );\n};\n\nconst sliceName = name => {\n  if (name.length > 25) {\n    return name.slice(0, 25) + '...';\n  }\n  return name;\n};\n\nexport default GameCard;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { SmoothAppearance } from 'utils/animations/animations';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const CustomGameCard = styled.div`\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  background-color: ${({ theme }) => theme.cardBackgroundColor};\n  position: relative;\n  cursor: pointer;\n  transition: 0.3s;\n  transition: all 0.5s;\n  border-radius: 5px;\n  /* opacity: 0; */\n  /* animation: ${SmoothAppearance} 10ms ease 600ms forwards; */\n\n  & img {\n    object-fit: cover;\n    border-radius: 5px 5px 0 0;\n    height: 200px;\n  }\n\n  & h3 {\n    color: ${({ theme }) => theme.mainTextColor};\n    text-align: center;\n    padding: 0 0 20px;\n  }\n\n  &:hover {\n    scale: 1.05;\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n\n    ${mobile`\n      scale: 1;\n      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n  `}\n  }\n\n  &::after {\n    content: '';\n    display: block;\n    height: 200px;\n    width: 100%;\n    position: absolute;\n    border-radius: 5px 5px 0 0;\n    z-index: 0;\n    top: 0;\n    left: 0;\n    background-image: linear-gradient(45deg, black, transparent);\n  }\n`;\n\nexport const CustomNavLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\n\nexport const LibaryWarningTitle = styled.h1`\n  grid-column: 1 / -1;\n  text-align: center;\n  color: ${({ theme }) => theme.mainTextColor};\n`;\n","import styled from 'styled-components';\n\nexport const CustomNextButton = styled.button`\n  font-size: 17px;\n  padding: 15px;\n  width: 50%;\n  text-align: center;\n  border: none;\n  text-transform: uppercase;\n  background-color: ${({ theme }) => theme.loadMoreBtnColor};\n  color: ${({ theme }) => theme.headerTextColor};\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { incrementPage } from 'store/requestReducer/requestSlice';\nimport { CustomNextButton } from './NextPage.styled';\nimport { select } from 'store/selectors/selectors';\n\nconst NextPage = () => {\n  const dispatch = useDispatch();\n  const lastPage = useSelector(select.lastPage)\n  const currentPage = useSelector(select.currentPage)\n  const currentPageName = useSelector(select.pageName)\n  const cloudTotalPages = useSelector(select.totalCloudPages)\n\n  const incrementPages = () => {\n    dispatch(incrementPage());\n  };\n\n  const checkLastPage = () => {\n    switch (currentPageName) {\n      case 'cloudLibary':\n        if (currentPage < cloudTotalPages) return false;\n        return true\n      default:\n        if (currentPage < lastPage) return false;\n        return true;\n    }\n  }\n\n  return <CustomNextButton disabled={checkLastPage()} onClick={incrementPages}>NextPage</CustomNextButton>;\n};\n\nexport default NextPage;\n","import styled from 'styled-components';\n\nexport const CustomPrevBtn = styled.button`\n  width: 50%;\n  font-size: 17px;\n  padding: 15px;\n  border: none;\n  text-align: center;\n  text-transform: uppercase;\n  background-color: ${({ theme }) => theme.loadMoreBtnColor};\n  color: ${({ theme }) => theme.headerTextColor};\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { decrementPage } from 'store/requestReducer/requestSlice';\nimport { select } from 'store/selectors/selectors';\nimport { CustomPrevBtn } from './PreviousPage.styled';\n\nconst PreviousPage = () => {\n  const dispatch = useDispatch();\n  const currentPage = useSelector(select.currentPage);\n\n  const decrementPages = () => {\n    dispatch(decrementPage());\n  };\n\n  return (\n    <CustomPrevBtn disabled={currentPage === 1} onClick={decrementPages}>\n      Previous page\n    </CustomPrevBtn>\n  );\n};\n\nexport default PreviousPage;\n","import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const PaginationWrapper = styled.div`\n  max-width: 1240px;\n  margin: 0 auto;\n  padding: 15px 15px 40px;\n  display: grid;\n  gap: 20px;\n  grid-template-columns: repeat(2, 1fr);\n  font-size: 17px;\n  border: none;\n  gap: 10px;\n  color: ${({ theme }) => theme.headerTextColor};\n  display: flex;\n\n  & button {\n    border-radius: 5px;\n    position: relative;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n\n    &:hover {\n      background-color: ${({ theme }) => theme.loadMoreHoverColor};\n      color: ${({ theme }) => theme.mainCardTextColor};\n      box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n\n      ${mobile`\n        background-color: ${({ theme }) => theme.loadMoreBtnColor};\n        color: ${({ theme }) => theme.headerTextColor};\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n      `}\n    }\n\n    &:disabled {\n      background-color: ${({ theme }) => theme.loadMoreDisabledColor};\n\n      &:hover {\n        background-color: ${({ theme }) => theme.loadMoreDisabledColor};\n        color: ${({ theme }) => theme.headerTextColor};\n        ${mobile`\n      background-color: ${({ theme }) => theme.loadMoreDisabledColor};\n  `}\n      }\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { select } from 'store/selectors/selectors';\nimport NextPage from '../NextPage/NextPage';\nimport PreviousPage from '../PreviousPage/PreviousPage';\nimport { LibaryWarningTitle } from './../../Main/Libary/Libary.styled';\nimport { PaginationWrapper } from './ManagerButton.styled';\n\nconst ManagerButton = () => {\n\n  const games = useSelector(select.gamesList)\n  const cloudGames = useSelector(select.cloudLibaryGames)\n  const currentPageName = useSelector(select.pageName)\n\n  const tempGames = currentPageName === \"cloudLibary\" ? cloudGames : games\n\n  return (\n    <>\n      {tempGames && tempGames.length ? <PaginationWrapper>\n        < PreviousPage />\n        <NextPage />\n      </PaginationWrapper > : <LibaryWarningTitle>Game list is empty... </LibaryWarningTitle>}\n    </>\n  );\n};\n\nexport default ManagerButton;\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import styled from 'styled-components';\nimport { mobile } from 'utils/mixins/adaptMixin';\n\nexport const ItemPage = styled.button`\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n\n  border: none;\n  padding: 10px;\n\n  background-color: ${({ theme }) => theme.loadMoreBtnColor};\n  color: ${({ theme }) => theme.headerTextColor};\n  cursor: pointer;\n  transition: all 0.5s ease 0s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.loadMoreHoverColor};\n    color: ${({ theme }) => theme.mainCardTextColor};\n    box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\n    transform: translatey(-10px);\n\n    ${mobile`\n        background-color: ${({ theme }) => theme.loadMoreBtnColor};\n        color: ${({ theme }) => theme.headerTextColor};\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n        transform: none;\n      `}\n  }\n\n  &.isActive {\n    background-color: ${({ theme }) => theme.headerTextColor};\n    color: ${({ theme }) => theme.loadMoreBtnColor};\n  }\n`;\nexport const ShamPageItem = styled.div``;\n\nexport const NumPageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 0 auto;\n  max-width: 1240px;\n  padding: 20px;\n\n  ${mobile`\n    gap: 5px; \n  `}\n`;\n\nexport const ReactItemWrapper = styled.div`\n  display: flex;\n  align-items: end;\n`;\n","import memoizeOne from \"memoize-one\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { select } from \"store/selectors/selectors\";\nimport { ItemPage, NumPageContainer, ShamPageItem, ReactItemWrapper } from \"./NumPageMenu.styles\";\nimport { setPage } from \"store/requestReducer/requestSlice\";\n\nconst NumPageMenu = () => {\n    const dispatch = useDispatch()\n    const lastPage = useSelector(select.lastPage);\n    const currentPage = useSelector(select.currentPage);\n\n    const getPageArray = memoizeOne((lastPage, currentPage) => {\n        const pageArray = [];\n\n        if (lastPage <= 9) {\n            for (let i = 1; i <= lastPage; i++) {\n                pageArray.push(i);\n            }\n        } else if (currentPage <= 4) {\n            for (let i = 1; i <= 7; i++) {\n                pageArray.push(i);\n            }\n            pageArray.push(\"...\");\n            pageArray.push(lastPage);\n        } else if (currentPage >= lastPage - 4) {\n            pageArray.push(1);\n            pageArray.push(\"...\");\n            for (let i = lastPage - 6; i <= lastPage; i++) {\n                pageArray.push(i);\n            }\n        } else {\n            pageArray.push(1);\n            pageArray.push(\"...\");\n            for (let i = currentPage - 2; i <= currentPage + 2; i++) {\n                pageArray.push(i);\n            }\n            pageArray.push(\"...\");\n            pageArray.push(lastPage);\n        }\n\n        return pageArray;\n    });\n\n    const pageArray = getPageArray(lastPage, currentPage);\n\n    return (\n        <NumPageContainer>\n            {pageArray.map((page, index) => (\n                <ReactItemWrapper key={index}>\n                    {page === \"...\" ? (\n                        <ShamPageItem>{page}</ShamPageItem>\n                    ) : (\n                        <ItemPage className={currentPage === page ? 'isActive' : ''} onClick={() => dispatch(setPage(page))}>{page}</ItemPage>\n                    )}\n                </ReactItemWrapper>\n            ))}\n        </NumPageContainer>\n    );\n};\n\nexport default NumPageMenu;\n","import GameGallery from \"components/Custom/GameGallery/GameGallery\";\nimport { SectionTitle } from \"components/Custom/GameGallery/GameGallery.styled\";\nimport Loader from \"components/Loader/Loader\";\nimport GameCard from \"components/Main/GameCard/GameCard\";\nimport ManagerButton from \"components/Pagination/ManagerButton/ManagerButton\";\nimport NumPageMenu from \"components/Pagination/NumPageMenu/NumPageMenu\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { searchGamesByGenre } from \"store/gamesReducer/gamesOperation\";\nimport { setCurrentPage } from 'store/requestReducer/requestSlice';\nimport { select } from \"store/selectors/selectors\";\n\nconst GameByGenresPage = () => {\n    const dispatch = useDispatch()\n    const gamesIsLoading = useSelector(select.gamesIsLoading);\n    const gamesList = useSelector(select.gamesList);\n    const page = useSelector(select.currentPage);\n    const { genre } = useParams();\n\n    useEffect(() => {\n        if (!genre) return\n        dispatch(setCurrentPage('by Genres'))\n        // eslint-disable-next-line\n    }, [])\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        dispatch(searchGamesByGenre({ page, genre }))\n    }, [page, genre, dispatch])\n\n\n    return (\n        <>\n            {gamesIsLoading && <Loader />}\n            <GameGallery>\n                <SectionTitle>{`Games in the genre: \"${genre}\"`}</SectionTitle>\n                {gamesList &&\n                    gamesList.map(game => <GameCard key={game.id} game={game} />)}\n            </GameGallery>\n            <NumPageMenu />\n            <ManagerButton />\n        </>\n    )\n}\n\nexport default GameByGenresPage"],"names":["children","GameGalleryContainer","styled","tablet","mobile","SectionTitle","theme","mainTextColor","sliceName","name","length","slice","game","id","short_screenshots","title","notFoundImage","to","width","src","image","alt","CustomGameCard","cardBackgroundColor","SmoothAppearance","CustomNavLink","NavLink","LibaryWarningTitle","CustomNextButton","loadMoreBtnColor","headerTextColor","dispatch","useDispatch","lastPage","useSelector","select","currentPage","currentPageName","cloudTotalPages","disabled","onClick","incrementPage","CustomPrevBtn","decrementPage","PaginationWrapper","loadMoreHoverColor","mainCardTextColor","loadMoreDisabledColor","games","cloudGames","tempGames","safeIsNaN","Number","isNaN","value","areInputsEqual","newInputs","lastInputs","i","first","second","ItemPage","ShamPageItem","NumPageContainer","ReactItemWrapper","getPageArray","resultFn","isEqual","cache","memoized","newArgs","_i","arguments","lastThis","this","lastArgs","lastResult","apply","clear","memoizeOne","pageArray","push","map","page","index","className","setPage","gamesIsLoading","gamesList","genre","useParams","useEffect","setCurrentPage","window","scrollTo","searchGamesByGenre"],"sourceRoot":""}