{"version":3,"file":"static/js/978.1502aed7.chunk.js","mappings":"6PA6CA,UAlCyB,WACrB,IAAMA,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,WACxBC,GAAYF,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,WACxBE,GAAOH,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,MACjBG,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACN,GAAKJ,EAEL,OADAE,GAASG,EAAAA,EAAAA,IAAe,iBACjB,kBAAMH,GAASI,EAAAA,EAAAA,MAAf,CAEV,GAAE,KAGHF,EAAAA,EAAAA,YAAU,WACNG,OAAOC,SAAS,EAAG,GACnBN,GAASO,EAAAA,EAAAA,GAAmB,CAAEV,KAAAA,EAAMC,MAAAA,IAEvC,GAAE,CAACD,KAIA,gCACKJ,IAAa,SAAC,IAAD,KACd,SAAC,IAAD,UACKG,GACGA,EAAUY,KAAI,SAAAC,GAAI,OAAI,SAAC,IAAD,CAAwBA,KAAMA,GAAfA,EAAKC,GAAxB,OAE1B,SAAC,IAAD,MAGX,C","sources":["pages/GameByGenres/GameByGenresPage.jsx"],"sourcesContent":["import GameGallery from \"components/Custom/GameGallery/GameGallery\";\nimport Loader from \"components/Loader/Loader\";\nimport GameCard from \"components/Main/GameCard/GameCard\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { searchGamesByGenre } from \"store/gamesReducer/gamesOperation\";\nimport { select } from \"store/selectors/selectors\";\nimport { setCurrentPage, setFirstPage } from 'store/requestReducer/requestSlice';\nimport ManagerButton from \"components/Pagination/ManagerButton/ManagerButton\";\n\nconst GameByGenresPage = () => {\n    const isLoading = useSelector(select.isLoading);\n    const gamesList = useSelector(select.gamesList);\n    const page = useSelector(select.page);\n    const { genre } = useParams();\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (!genre) return\n        dispatch(setCurrentPage('gameByGenres'))\n        return () => dispatch(setFirstPage())\n        // eslint-disable-next-line\n    }, [])\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        dispatch(searchGamesByGenre({ page, genre }))\n        // eslint-disable-next-line\n    }, [page])\n\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            <GameGallery>\n                {gamesList &&\n                    gamesList.map(game => <GameCard key={game.id} game={game} />)}\n            </GameGallery>\n            <ManagerButton />\n        </>\n    )\n}\n\nexport default GameByGenresPage"],"names":["isLoading","useSelector","select","gamesList","page","genre","useParams","dispatch","useDispatch","useEffect","setCurrentPage","setFirstPage","window","scrollTo","searchGamesByGenre","map","game","id"],"sourceRoot":""}